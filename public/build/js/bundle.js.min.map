{"version":3,"sources":["hours.js","speakers.js","tags.js"],"names":["document","querySelector","search","category_id","day_id","category","days","querySelectorAll","inputHiddenDay","inputHiddenHour","searchTerms","e","target","name","value","prevHour","classList","remove","Object","values","includes","async","url","result","fetch","events","hoursList","forEach","li","add","assignedHours","map","event","hour_id","hoursListArray","Array","from","filter","dataset","hourId","hour","addEventListener","selectHour","removeEventListener","getAvailableHours","json","searchEvents","day","inputSpeakers","speakers","filteredSpeakers","response","arraySpeakers","speaker","trim","lastname","id","speakersFormat","getSpeakers","searching","length","expression","RegExp","toLowerCase","console","log","tagsInput","tagsDiv","tagsInputHidden","tags","showTags","textContent","tag","tagElement","createElement","toUpperCase","substring","ondblclick","deleteTag","appendChild","updateInputHidden","toString","split","keyCode","preventDefault","exec"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n  const hours = document.querySelector('#hours');\r\n  \r\n  if(hours) {\r\n    let search = {\r\n      category_id: '',\r\n      day_id: ''\r\n    };\r\n\r\n    const category = document.querySelector('[name=category_id]');\r\n    const days = document.querySelectorAll('[name=day_id]');\r\n    const inputHiddenDay = document.querySelector('[name=day]');\r\n    const inputHiddenHour = document.querySelector('[name=hour_id]');\r\n    category.addEventListener('change', searchTerms);\r\n    days.forEach(day => {\r\n      day.addEventListener('change', searchTerms);\r\n    });\r\n\r\n    function searchTerms(e) {\r\n      search[e.target.name] = e.target.value;\r\n\r\n      // Reset hidden fields & hour selector\r\n      inputHiddenHour.value = '';\r\n      inputHiddenDay.value = '';\r\n\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n\r\n      if(Object.values(search).includes('')) {\r\n        return ;\r\n      }\r\n      searchEvents();\r\n    }\r\n\r\n    async function searchEvents(){\r\n      // Get ids\r\n      const { day_id, category_id } = search;\r\n      const url = `/api/eventos-horario?day_id=${day_id}&category_id=${category_id}`;\r\n      const result = await fetch(url);\r\n      const events = await result.json();\r\n      getAvailableHours(events);\r\n    }\r\n\r\n    function getAvailableHours(events) {\r\n      // Reset hours\r\n      const hoursList = document.querySelectorAll('#hours li');\r\n      hoursList.forEach(li => li.classList.add('hours__hour--disabled'));\r\n\r\n      // Check assigned events\r\n      const assignedHours = events.map(event => event.hour_id);\r\n      \r\n      const hoursListArray = Array.from(hoursList);\r\n\r\n      // Get unassigned hours\r\n      const unassignedHours = hoursListArray.filter(li => !assignedHours.includes(li.dataset.hourId));\r\n\r\n      // Remove the disabled class from the unassigned hours\r\n      unassignedHours.forEach(li => li.classList.remove('hours__hour--disabled'));\r\n\r\n      const availableHours = document.querySelectorAll('#hours li:not(.hours__hour--disabled)');\r\n      availableHours.forEach(hour => {\r\n        hour.addEventListener('click', selectHour);\r\n      });\r\n\r\n      const disabledHours = document.querySelectorAll('.hours__hour--disabled');\r\n      disabledHours.forEach(hour => hour.removeEventListener('click', selectHour));\r\n    }\r\n\r\n    function selectHour(e) {\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n      // Add selected class\r\n      e.target.classList.add('hours__hour--selected');\r\n      inputHiddenHour.value = e.target.dataset.hourId;\r\n\r\n      // Fill day input hidden\r\n      inputHiddenDay.value = document.querySelector('[name=\"day_id\"]:checked').value;\r\n    }\r\n  }\r\n})();","(function() {\r\n  const inputSpeakers = document.querySelector('#speakers');\r\n  if(inputSpeakers) {\r\n    let speakers = [];\r\n    let filteredSpeakers = [];\r\n\r\n    getSpeakers();\r\n    inputSpeakers.addEventListener('input', searchSpeakers);\r\n\r\n    async function getSpeakers() {\r\n      const url = `/api/ponentes`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      speakersFormat(result);\r\n    }\r\n\r\n    function speakersFormat(arraySpeakers = []) {\r\n      speakers = arraySpeakers.map(speaker => {\r\n        return {\r\n          name: `${speaker.name.trim()} ${speaker.lastname.trim()}`,\r\n          id: speaker.id\r\n        }\r\n      })\r\n    }\r\n\r\n    function searchSpeakers(e) {\r\n      const searching = e.target.value;\r\n      if(searching.length > 3) {\r\n        const expression = new RegExp(searching, \"i\");\r\n        filteredSpeakers = speakers.filter(speaker => {\r\n          if(speaker.name.toLowerCase().search(expression) != -1) {\r\n            return speaker;\r\n          }\r\n        })\r\n        console.log(filteredSpeakers);\r\n      }\r\n    }\r\n  }\r\n})();","(function() {\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  if(tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Get tags from hidden input\r\n    if(tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      showTags();\r\n    }\r\n\r\n    // Listening to changes in the input\r\n    tagsInput.addEventListener('keypress', saveTag);\r\n\r\n    function saveTag(e) {\r\n      if(e.keyCode === 44) {\r\n        e.preventDefault();\r\n        const regexp = /^([A-Za-z0-9\\u002e\\u002b\\u0023\\u0020]){2,15}$/i;\r\n        if(!regexp.exec(e.target.value.trim())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        } \r\n        if (tags.includes(e.target.value.toLowerCase())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        }\r\n        \r\n        tags = [...tags, e.target.value.toLowerCase().trim()];\r\n        tagsInput.value = '';\r\n        showTags();\r\n      }\r\n    }\r\n\r\n    function showTags() {\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag => {\r\n        const tagElement = document.createElement('LI');\r\n        tagElement.classList.add('form__tag');\r\n        tagElement.textContent = tag[0].toUpperCase() + tag.substring(1);\r\n        tagElement.ondblclick = deleteTag;\r\n        tagsDiv.appendChild(tagElement);\r\n      })\r\n      updateInputHidden();\r\n    }\r\n    \r\n    function deleteTag(e) {\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent.toLowerCase());\r\n      updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n  }\r\n})();\r\n"]}