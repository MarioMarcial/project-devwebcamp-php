{"version":3,"sources":["hours.js","speakers.js","tags.js"],"names":["document","querySelector","category","days","querySelectorAll","inputHiddenDay","inputHiddenHour","addEventListener","searchTerms","forEach","day","search","category_id","value","day_id","Object","values","includes","async","searchEvents","id","selectedHour","classList","remove","add","onclick","selectHour","startApp","e","target","name","prevHour","url","result","fetch","events","hoursList","li","assignedHours","map","event","hour_id","hoursListArray","Array","from","filter","dataset","hourId","hour","removeEventListener","getAvailableHours","json","inputSpeakers","speakers","filteredSpeakers","speakersList","hiddenSpeaker","selectSpeaker","speaker","prevSpeaker","speakerId","response","arraySpeakers","trim","lastname","speakersFormat","getSpeakers","searching","length","expression","RegExp","toLowerCase","firstChild","removeChild","htmlSpeaker","createElement","textContent","appendChild","noResults","showSpeakers","getSpeaker","speakerDOM","tagsInput","tagsDiv","tagsInputHidden","tags","showTags","tag","tagElement","toUpperCase","substring","ondblclick","deleteTag","updateInputHidden","toString","split","keyCode","preventDefault","exec"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n  const hours = document.querySelector('#hours');\r\n  \r\n  if(hours) {\r\n    \r\n    const category = document.querySelector('[name=category_id]');\r\n    const days = document.querySelectorAll('[name=day_id]');\r\n    const inputHiddenDay = document.querySelector('[name=day]');\r\n    const inputHiddenHour = document.querySelector('[name=hour_id]');\r\n\r\n    category.addEventListener('change', searchTerms);\r\n    days.forEach(day => {\r\n      day.addEventListener('change', searchTerms);\r\n    });\r\n    \r\n    let search = {\r\n      category_id: +category.value || '',\r\n      day_id: +inputHiddenDay.value || ''\r\n    };\r\n\r\n    if(!Object.values(search).includes('')) {\r\n      async function startApp() {\r\n        await searchEvents();\r\n\r\n        // Add selected class to the current time\r\n        const id = inputHiddenHour.value;\r\n        const selectedHour = document.querySelector(`[data-hour-id=\"${id}\"]`);\r\n        selectedHour.classList.remove('hours__hour--disabled');\r\n        selectedHour.classList.add('hours__hour--selected');\r\n        selectedHour.onclick = selectHour;\r\n      }\r\n\r\n      startApp();\r\n    }\r\n\r\n    function searchTerms(e) {\r\n      search[e.target.name] = e.target.value;\r\n\r\n      // Reset hidden fields & hour selector\r\n      inputHiddenHour.value = '';\r\n      inputHiddenDay.value = '';\r\n\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n\r\n      if(Object.values(search).includes('')) {\r\n        return ;\r\n      }\r\n      searchEvents();\r\n    }\r\n\r\n    async function searchEvents(){\r\n      // Get ids\r\n      const { day_id, category_id } = search;\r\n      const url = `/api/eventos-horario?day_id=${day_id}&category_id=${category_id}`;\r\n      const result = await fetch(url);\r\n      const events = await result.json();\r\n      getAvailableHours(events);\r\n    }\r\n\r\n    function getAvailableHours(events) {\r\n      // Reset hours\r\n      const hoursList = document.querySelectorAll('#hours li');\r\n      hoursList.forEach(li => li.classList.add('hours__hour--disabled'));\r\n\r\n      // Check assigned events\r\n      const assignedHours = events.map(event => event.hour_id);\r\n      \r\n      const hoursListArray = Array.from(hoursList);\r\n\r\n      // Get unassigned hours\r\n      const unassignedHours = hoursListArray.filter(li => !assignedHours.includes(li.dataset.hourId));\r\n\r\n      // Remove the disabled class from the unassigned hours\r\n      unassignedHours.forEach(li => li.classList.remove('hours__hour--disabled'));\r\n\r\n      const availableHours = document.querySelectorAll('#hours li:not(.hours__hour--disabled)');\r\n      availableHours.forEach(hour => {\r\n        hour.addEventListener('click', selectHour);\r\n      });\r\n\r\n      const disabledHours = document.querySelectorAll('.hours__hour--disabled');\r\n      disabledHours.forEach(hour => hour.removeEventListener('click', selectHour));\r\n    }\r\n\r\n    function selectHour(e) {\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n      // Add selected class\r\n      e.target.classList.add('hours__hour--selected');\r\n      inputHiddenHour.value = e.target.dataset.hourId;\r\n\r\n      // Fill day input hidden\r\n      inputHiddenDay.value = document.querySelector('[name=\"day_id\"]:checked').value;\r\n    }\r\n  }\r\n})();","(function() {\r\n  const inputSpeakers = document.querySelector('#speakers');\r\n  if(inputSpeakers) {\r\n    let speakers = [];\r\n    let filteredSpeakers = [];\r\n\r\n    const speakersList = document.querySelector('#speakers-list');\r\n    const hiddenSpeaker = document.querySelector('[name=\"speaker_id\"]');\r\n\r\n    getSpeakers();\r\n    inputSpeakers.addEventListener('input', searchSpeakers);\r\n\r\n    if(hiddenSpeaker.value) {\r\n      (async() => {\r\n        const speaker = await getSpeaker(hiddenSpeaker.value);\r\n        // Add to the HTML\r\n        const speakerDOM = document.createElement(\"LI\");\r\n        speakerDOM.classList.add(\"speakers-list__speaker\", \"speakers-list__speaker--selected\");\r\n        speakerDOM.textContent = `${speaker.name} ${speaker.lastname}`;\r\n        speakersList.appendChild(speakerDOM);\r\n        \r\n      })()\r\n    }\r\n\r\n    async function getSpeakers() {\r\n      const url = `/api/ponentes`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      speakersFormat(result);\r\n    }\r\n\r\n    async function getSpeaker(id) {\r\n      const url = `/api/ponente?id=${id}`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      return result;\r\n    }\r\n\r\n    function speakersFormat(arraySpeakers = []) {\r\n      speakers = arraySpeakers.map(speaker => {\r\n        return {\r\n          name: `${speaker.name.trim()} ${speaker.lastname.trim()}`,\r\n          id: speaker.id\r\n        }\r\n      })\r\n    }\r\n\r\n    function searchSpeakers(e) {\r\n      const searching = e.target.value;\r\n      if(searching.length > 3) {\r\n        const expression = new RegExp(searching, \"i\");\r\n        filteredSpeakers = speakers.filter(speaker => {\r\n          if(speaker.name.toLowerCase().search(expression) != -1) {\r\n            return speaker;\r\n          }\r\n        })\r\n      } else {\r\n        filteredSpeakers = [];\r\n      }\r\n      showSpeakers();\r\n    }\r\n\r\n    function showSpeakers() {\r\n      while(speakersList.firstChild) {\r\n        speakersList.removeChild(speakersList.firstChild);\r\n      }\r\n\r\n      if(filteredSpeakers.length > 0) {\r\n        filteredSpeakers.forEach(speaker => {\r\n          const htmlSpeaker = document.createElement(\"LI\");\r\n          htmlSpeaker.classList.add(\"speakers-list__speaker\");\r\n          htmlSpeaker.textContent = speaker.name;\r\n          htmlSpeaker.dataset.speakerId = speaker.id;\r\n          htmlSpeaker.onclick = selectSpeaker;\r\n          // Add to DOM\r\n          speakersList.appendChild(htmlSpeaker);\r\n        })\r\n      } else {\r\n        const noResults = document.createElement(\"P\");\r\n        noResults.classList.add(\"speakers-list__no-result\");\r\n        noResults.textContent = 'No hay resultados para tu búsqueda';\r\n        speakersList.appendChild(noResults);\r\n      }\r\n    }\r\n\r\n    function selectSpeaker(e) {     \r\n      const speaker = e.target;\r\n\r\n      const prevSpeaker = document.querySelector('.speakers-list__speaker--selected');\r\n      if(prevSpeaker) {\r\n        prevSpeaker.classList.remove('speakers-list__speaker--selected');\r\n      }\r\n\r\n      speaker.classList.add('speakers-list__speaker--selected');\r\n      hiddenSpeaker.value = speaker.dataset.speakerId;\r\n    }\r\n  }\r\n})();","(function() {\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  if(tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Get tags from hidden input\r\n    if(tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      showTags();\r\n    }\r\n\r\n    // Listening to changes in the input\r\n    tagsInput.addEventListener('keypress', saveTag);\r\n\r\n    function saveTag(e) {\r\n      if(e.keyCode === 44) {\r\n        e.preventDefault();\r\n        const regexp = /^([A-Za-z0-9\\u002e\\u002b\\u0023\\u0020]){2,15}$/i;\r\n        if(!regexp.exec(e.target.value.trim())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        } \r\n        if (tags.includes(e.target.value.toLowerCase())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        }\r\n        \r\n        tags = [...tags, e.target.value.toLowerCase().trim()];\r\n        tagsInput.value = '';\r\n        showTags();\r\n      }\r\n    }\r\n\r\n    function showTags() {\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag => {\r\n        const tagElement = document.createElement('LI');\r\n        tagElement.classList.add('form__tag');\r\n        tagElement.textContent = tag[0].toUpperCase() + tag.substring(1);\r\n        tagElement.ondblclick = deleteTag;\r\n        tagsDiv.appendChild(tagElement);\r\n      })\r\n      updateInputHidden();\r\n    }\r\n    \r\n    function deleteTag(e) {\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent.toLowerCase());\r\n      updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n  }\r\n})();\r\n"]}