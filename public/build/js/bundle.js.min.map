{"version":3,"sources":["hours.js","speakers.js","tags.js"],"names":["document","querySelector","search","category_id","day_id","category","days","querySelectorAll","inputHiddenDay","inputHiddenHour","searchTerms","e","target","name","value","prevHour","classList","remove","Object","values","includes","async","url","result","fetch","events","hoursList","forEach","li","add","assignedHours","map","event","hour_id","hoursListArray","Array","from","filter","dataset","hourId","hour","addEventListener","selectHour","removeEventListener","getAvailableHours","json","searchEvents","day","inputSpeakers","speakers","filteredSpeakers","speakersList","hiddenSpeaker","selectSpeaker","speaker","prevSpeaker","speakerId","response","arraySpeakers","trim","lastname","id","speakersFormat","getSpeakers","searching","length","expression","RegExp","toLowerCase","firstChild","removeChild","htmlSpeaker","createElement","textContent","onclick","appendChild","noResults","showSpeakers","tagsInput","tagsDiv","tagsInputHidden","tags","showTags","tag","tagElement","toUpperCase","substring","ondblclick","deleteTag","updateInputHidden","toString","split","keyCode","preventDefault","exec"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n  const hours = document.querySelector('#hours');\r\n  \r\n  if(hours) {\r\n    let search = {\r\n      category_id: '',\r\n      day_id: ''\r\n    };\r\n\r\n    const category = document.querySelector('[name=category_id]');\r\n    const days = document.querySelectorAll('[name=day_id]');\r\n    const inputHiddenDay = document.querySelector('[name=day]');\r\n    const inputHiddenHour = document.querySelector('[name=hour_id]');\r\n    category.addEventListener('change', searchTerms);\r\n    days.forEach(day => {\r\n      day.addEventListener('change', searchTerms);\r\n    });\r\n\r\n    function searchTerms(e) {\r\n      search[e.target.name] = e.target.value;\r\n\r\n      // Reset hidden fields & hour selector\r\n      inputHiddenHour.value = '';\r\n      inputHiddenDay.value = '';\r\n\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n\r\n      if(Object.values(search).includes('')) {\r\n        return ;\r\n      }\r\n      searchEvents();\r\n    }\r\n\r\n    async function searchEvents(){\r\n      // Get ids\r\n      const { day_id, category_id } = search;\r\n      const url = `/api/eventos-horario?day_id=${day_id}&category_id=${category_id}`;\r\n      const result = await fetch(url);\r\n      const events = await result.json();\r\n      getAvailableHours(events);\r\n    }\r\n\r\n    function getAvailableHours(events) {\r\n      // Reset hours\r\n      const hoursList = document.querySelectorAll('#hours li');\r\n      hoursList.forEach(li => li.classList.add('hours__hour--disabled'));\r\n\r\n      // Check assigned events\r\n      const assignedHours = events.map(event => event.hour_id);\r\n      \r\n      const hoursListArray = Array.from(hoursList);\r\n\r\n      // Get unassigned hours\r\n      const unassignedHours = hoursListArray.filter(li => !assignedHours.includes(li.dataset.hourId));\r\n\r\n      // Remove the disabled class from the unassigned hours\r\n      unassignedHours.forEach(li => li.classList.remove('hours__hour--disabled'));\r\n\r\n      const availableHours = document.querySelectorAll('#hours li:not(.hours__hour--disabled)');\r\n      availableHours.forEach(hour => {\r\n        hour.addEventListener('click', selectHour);\r\n      });\r\n\r\n      const disabledHours = document.querySelectorAll('.hours__hour--disabled');\r\n      disabledHours.forEach(hour => hour.removeEventListener('click', selectHour));\r\n    }\r\n\r\n    function selectHour(e) {\r\n      // Deactive prev hour, if there is a new click\r\n      const prevHour = document.querySelector('.hours__hour--selected');\r\n      if(prevHour) {\r\n        prevHour.classList.remove('hours__hour--selected');\r\n      }\r\n      // Add selected class\r\n      e.target.classList.add('hours__hour--selected');\r\n      inputHiddenHour.value = e.target.dataset.hourId;\r\n\r\n      // Fill day input hidden\r\n      inputHiddenDay.value = document.querySelector('[name=\"day_id\"]:checked').value;\r\n    }\r\n  }\r\n})();","(function() {\r\n  const inputSpeakers = document.querySelector('#speakers');\r\n  if(inputSpeakers) {\r\n    let speakers = [];\r\n    let filteredSpeakers = [];\r\n\r\n    const speakersList = document.querySelector('#speakers-list');\r\n    const hiddenSpeaker = document.querySelector('[name=\"speaker_id\"]');\r\n\r\n    getSpeakers();\r\n    inputSpeakers.addEventListener('input', searchSpeakers);\r\n\r\n    async function getSpeakers() {\r\n      const url = `/api/ponentes`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      speakersFormat(result);\r\n    }\r\n\r\n    function speakersFormat(arraySpeakers = []) {\r\n      speakers = arraySpeakers.map(speaker => {\r\n        return {\r\n          name: `${speaker.name.trim()} ${speaker.lastname.trim()}`,\r\n          id: speaker.id\r\n        }\r\n      })\r\n    }\r\n\r\n    function searchSpeakers(e) {\r\n      const searching = e.target.value;\r\n      if(searching.length > 3) {\r\n        const expression = new RegExp(searching, \"i\");\r\n        filteredSpeakers = speakers.filter(speaker => {\r\n          if(speaker.name.toLowerCase().search(expression) != -1) {\r\n            return speaker;\r\n          }\r\n        })\r\n      } else {\r\n        filteredSpeakers = [];\r\n      }\r\n      showSpeakers();\r\n    }\r\n\r\n    function showSpeakers() {\r\n      while(speakersList.firstChild) {\r\n        speakersList.removeChild(speakersList.firstChild);\r\n      }\r\n\r\n      if(filteredSpeakers.length > 0) {\r\n        filteredSpeakers.forEach(speaker => {\r\n          const htmlSpeaker = document.createElement(\"LI\");\r\n          htmlSpeaker.classList.add(\"speakers-list__speaker\");\r\n          htmlSpeaker.textContent = speaker.name;\r\n          htmlSpeaker.dataset.speakerId = speaker.id;\r\n          htmlSpeaker.onclick = selectSpeaker;\r\n          // Add to DOM\r\n          speakersList.appendChild(htmlSpeaker);\r\n        })\r\n      } else {\r\n        const noResults = document.createElement(\"P\");\r\n        noResults.classList.add(\"speakers-list__no-result\");\r\n        noResults.textContent = 'No hay resultados para tu b√∫squeda';\r\n        speakersList.appendChild(noResults);\r\n      }\r\n    }\r\n\r\n    function selectSpeaker(e) {     \r\n      const speaker = e.target;\r\n\r\n      const prevSpeaker = document.querySelector('.speakers-list__speaker--selected');\r\n      if(prevSpeaker) {\r\n        prevSpeaker.classList.remove('speakers-list__speaker--selected');\r\n      }\r\n\r\n      speaker.classList.add('speakers-list__speaker--selected');\r\n      hiddenSpeaker.value = speaker.dataset.speakerId;\r\n    }\r\n  }\r\n})();","(function() {\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  if(tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Get tags from hidden input\r\n    if(tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      showTags();\r\n    }\r\n\r\n    // Listening to changes in the input\r\n    tagsInput.addEventListener('keypress', saveTag);\r\n\r\n    function saveTag(e) {\r\n      if(e.keyCode === 44) {\r\n        e.preventDefault();\r\n        const regexp = /^([A-Za-z0-9\\u002e\\u002b\\u0023\\u0020]){2,15}$/i;\r\n        if(!regexp.exec(e.target.value.trim())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        } \r\n        if (tags.includes(e.target.value.toLowerCase())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        }\r\n        \r\n        tags = [...tags, e.target.value.toLowerCase().trim()];\r\n        tagsInput.value = '';\r\n        showTags();\r\n      }\r\n    }\r\n\r\n    function showTags() {\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag => {\r\n        const tagElement = document.createElement('LI');\r\n        tagElement.classList.add('form__tag');\r\n        tagElement.textContent = tag[0].toUpperCase() + tag.substring(1);\r\n        tagElement.ondblclick = deleteTag;\r\n        tagsDiv.appendChild(tagElement);\r\n      })\r\n      updateInputHidden();\r\n    }\r\n    \r\n    function deleteTag(e) {\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent.toLowerCase());\r\n      updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n  }\r\n})();\r\n"]}